@echo off
setlocal enabledelayedexpansion

:input_project_name
set /p NEXT_APP_NAME="Enter the name of the project (or type 'exit' to exit) or (type . for current directory): "
if /i "%NEXT_APP_NAME%"=="exit" (
    echo Exiting...
    exit /b
)
if "%NEXT_APP_NAME%"=="" (
    echo Please provide the name of the project
    goto input_project_name
)
if "%NEXT_APP_NAME%"=="." (
    set NEXT_APP_NAME=.
)

SET NEXT_PUBLIC_WITH_TURBOPACK=0
SET NEXT_PUBLIC_USE_TAILWIND=1

echo "Starting Next.js app creation..."
call npx create-next-app@latest %NEXT_APP_NAME% --no-ts --no-eslint --tailwind --no-src-dir --app --no-turbo --use-npm --yes
echo "Next.js app created successfully."

echo Managing Next.js project...
cd %NEXT_APP_NAME%
:: Ensure app directory exists
if not exist "app" mkdir app

:: Remove favicon.ico if it exists
if exist "app\favicon.ico" del "app\favicon.ico"

:: Remove and recreate public folder
if exist "public" rd /s /q "public"
mkdir "public"

:: Writing globals.css
(
echo @tailwind base;
echo @tailwind components;
echo @tailwind utilities;
) > app\globals.css

:: Writing layout.js
(
echo import "./globals.css";
echo.
echo export const metadata = ^{
echo   title: "Create Next App",
echo   description: "Generated by create next app",
echo ^};
echo.
echo export default function RootLayout(^{ children ^}) ^{
echo   return (
echo     ^<html lang="en"^>
echo       ^<body^>
echo         ^<div^>^!children^!^</div^>
echo       ^</body^>
echo     ^</html^>
echo   );
echo ^}
) > app\layout.js

:: Writing page.js
(
echo export default function Home() ^{
echo   return (
echo     ^<^>^</^>
echo   );
echo ^}
) > app\page.js

echo Next.js project setup complete!
pause
